{
	"info": {
		"_postman_id": "4c485e64-8041-46f3-ae05-6de5e73c5111",
		"name": "Todoist",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "PROJECT",
			"item": [
				{
					"name": "Create Project",
					"item": [
						{
							"name": "Create a new Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var name = pm.environment.get(\"projectName\");",
											"pm.test(\"Project name is correct\", function(){",
											"    pm.expect(jsonData.name).to.eql(name);",
											"});",
											"",
											"pm.environment.set(\"projectId\", jsonData.id);",
											"postman.setNextRequest('Get Project')"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Requested-Id",
										"value": "$(uuidgen)",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\" : \"{{projectName}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURLProjects}}",
									"host": [
										"{{baseURLProjects}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Projects",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var name = pm.variables.get(\"projectNameDDT\");",
											"pm.test(\"Project name is correct\", function(){",
											"    pm.expect(jsonData.name).to.eql(name);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Requested-Id",
										"value": "$(uuidgen)",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\" : \"{{projectNameDDT}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURLProjects}}",
									"host": [
										"{{baseURLProjects}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get Project",
					"item": [
						{
							"name": "Get Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var id = pm.environment.get(\"projectId\");",
											"pm.test(\"Project ID is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).to.eql(id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURLProjects}}/{{projectId}}",
									"host": [
										"{{baseURLProjects}}"
									],
									"path": [
										"{{projectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Project doesn´t exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseURLProjects}}/{{{{notExistingProject}}}}",
									"host": [
										"{{baseURLProjects}}"
									],
									"path": [
										"{{{{notExistingProject}}}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update Project",
					"item": [
						{
							"name": "Update Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Requested-Id",
										"value": "$(uuidgen)",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\" : \"Updated\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURLProjects}}/{{projectId}}",
									"host": [
										"{{baseURLProjects}}"
									],
									"path": [
										"{{projectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Project doesn´t exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Requested-Id",
										"value": "$(uuidgen)",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\" : \"Updated\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURLProjects}}/{{notExistingProject}}",
									"host": [
										"{{baseURLProjects}}"
									],
									"path": [
										"{{notExistingProject}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete Project",
					"item": [
						{
							"name": "Delete Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURLProjects}}/{{projectId}}",
									"host": [
										"{{baseURLProjects}}"
									],
									"path": [
										"{{projectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get all Projects",
					"item": [
						{
							"name": "Get all Projects",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURLProjects}}",
									"host": [
										"{{baseURLProjects}}"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "TASK",
			"item": [
				{
					"name": "Get Active Tasks",
					"item": [
						{
							"name": "Get Active Tasks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Negative test",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURLTasks}}",
									"host": [
										"{{baseURLTasks}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create a new task",
					"item": [
						{
							"name": "Create a new Project For Task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"var name = pm.environment.get(\"projectName\");",
											"pm.test(\"Project name is correct\", function(){",
											"    pm.expect(jsonData.name).to.eql(name);",
											"});",
											"",
											"pm.environment.set(\"projectId\", jsonData.id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Requested-Id",
										"value": "$(uuidgen)",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\" : \"{{projectName}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURLProjects}}",
									"host": [
										"{{baseURLProjects}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a new task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Task content is correct\", function(){",
											"    pm.expect(jsonData.content).to.eql(\"Buy more water\");",
											"    pm.expect(jsonData.priority).not.greaterThan(4);",
											"});",
											"",
											"pm.environment.set(\"taskId\", jsonData.id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Requested-Id",
										"value": "$(uuidgen)",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"project_id\" : {{projectId}},\n    \"content\" : \"Buy more water\",\n    \"due_string\": \"tomorrow at 12:00\", \n    \"due_lang\": \"en\", \n    \"priority\": 4\n}"
								},
								"url": {
									"raw": "{{baseURLTasks}}",
									"host": [
										"{{baseURLTasks}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a new task wrong priority",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"postman.setNextRequest('Get an active task');"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Requested-Id",
										"value": "$(uuidgen)",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"project_id\" : {{projectId}},\n    \"content\" : \"Buy more water\",\n    \"due_string\": \"tomorrow at 12:00\", \n    \"due_lang\": \"en\", \n    \"priority\": 5\n}"
								},
								"url": {
									"raw": "{{baseURLTasks}}",
									"host": [
										"{{baseURLTasks}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create tasks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"var content = pm.variables.get(\"contentDDT\");",
											"var duestring = pm.variables.get(\"due_stringDDT\");",
											"var priority = pm.variables.get(\"priorityDDT\");",
											"",
											"pm.test(\"Task data is correct\", function(){",
											"    pm.expect(jsonData.content).to.eql(content);",
											"    pm.expect(jsonData.priority).to.eql(priority);",
											"    pm.expect(jsonData.due.string).to.eql(duestring);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Requested-Id",
										"value": "$(uuidgen)",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"project_id\" : {{projectId}},\n    \"content\" : \"{{contentDDT}}\",\n    \"due_string\": \"{{due_stringDDT}}\", \n    \"due_lang\": \"{{due_langDDT}}\", \n    \"priority\": {{priorityDDT}}\n}"
								},
								"url": {
									"raw": "{{baseURLTasks}}",
									"host": [
										"{{baseURLTasks}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get an active task",
					"item": [
						{
							"name": "Get an active task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var id = pm.environment.get(\"taskId\");",
											"",
											"pm.test(\"taskId ID is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).to.eql(id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURLTasks}}/{{taskId}}",
									"host": [
										"{{baseURLTasks}}"
									],
									"path": [
										"{{taskId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get an active task doesn´t exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURLTasks}}/{{nonExistingTask}}",
									"host": [
										"{{baseURLTasks}}"
									],
									"path": [
										"{{nonExistingTask}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update a task",
					"item": [
						{
							"name": "Update a task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Requested-Id",
										"value": "$(uuidgen)",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\" : \"Buy food\",\n    \"priority\" : 2\n}"
								},
								"url": {
									"raw": "{{baseURLTasks}}/{{taskId}}",
									"host": [
										"{{baseURLTasks}}"
									],
									"path": [
										"{{taskId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a task doesn´t exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Requested-Id",
										"value": "$(uuidgen)",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\" : \"Buy food\",\n    \"priority\" : 2\n}"
								},
								"url": {
									"raw": "{{baseURLTasks}}/{{nonExistingTask}}",
									"host": [
										"{{baseURLTasks}}"
									],
									"path": [
										"{{nonExistingTask}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Change a task status to 'complete'",
					"item": [
						{
							"name": "Close a task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURLTasks}}/{{taskId}}/close",
									"host": [
										"{{baseURLTasks}}"
									],
									"path": [
										"{{taskId}}",
										"close"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Reopen a task",
					"item": [
						{
							"name": "Reopen a task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURLTasks}}/{{taskId}}/reopen",
									"host": [
										"{{baseURLTasks}}"
									],
									"path": [
										"{{taskId}}",
										"reopen"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete a task",
					"item": [
						{
							"name": "Delete a task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURLTasks}}/{{taskId}}",
									"host": [
										"{{baseURLTasks}}"
									],
									"path": [
										"{{taskId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a task doesn´t exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURLTasks}}/{{nonExistingTask}}",
									"host": [
										"{{baseURLTasks}}"
									],
									"path": [
										"{{nonExistingTask}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"switch (pm.info.requestName) {",
					"    case \"Get Project doesn´t exist\":",
					"       break;",
					"    case \"Create a new task wrong priority\":",
					"       break;",
					"    case \"Get an active task doesn´t exist\":",
					"       break;",
					"    case \"Update Project doesn´t exist\":",
					"       break; ",
					"    case \"Update a task doesn´t exist\":",
					"       break;",
					"    case \"Delete a task doesn´t exist\":",
					"       break;",
					"    default:",
					"        pm.test(\"Status code is 2xx\", function () {",
					"        pm.response.to.be.success;",
					"    });",
					"}",
					"",
					"pm.test(\"Response time is less than 500ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(500);",
					"});",
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "notExistingProject",
			"value": "12345"
		},
		{
			"key": "nonExistingTask",
			"value": "12345"
		}
	]
}